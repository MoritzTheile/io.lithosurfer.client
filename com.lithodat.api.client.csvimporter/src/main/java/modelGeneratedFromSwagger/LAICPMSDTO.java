/*
 * Lithosurfer API: Geochem model
 * Please have a look at the <a href=\"https://docs.google.com/presentation/d/1XcjHiopwNzasUvwC_7UZlkou82tfstEdqGZxqXITV3s/edit?usp=sharing\">High Level Docs</a> for getting the whole picture.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: support@lithosurfer.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package modelGeneratedFromSwagger;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * LAICPMSDTO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-07T06:47:05.458Z")
public class LAICPMSDTO {
  @SerializedName("ablationDuration")
  private Integer ablationDuration = null;

  @SerializedName("additionalGas")
  private String additionalGas = null;

  @SerializedName("additionalGasFlow")
  private Float additionalGasFlow = null;

  @SerializedName("analyticalSessionID")
  private String analyticalSessionID = null;

  @SerializedName("blankDuration")
  private Integer blankDuration = null;

  @SerializedName("calibratingReferenceMaterialId")
  private Long calibratingReferenceMaterialId = null;

  @SerializedName("calibratingReferenceMaterialName")
  private String calibratingReferenceMaterialName = null;

  @SerializedName("carrierGas")
  private String carrierGas = null;

  @SerializedName("carrierGasFlow")
  private Float carrierGasFlow = null;

  @SerializedName("combinedMeasurementId")
  private Long combinedMeasurementId = null;

  @SerializedName("combinedMeasurementName")
  private String combinedMeasurementName = null;

  @SerializedName("dataReductionPackageId")
  private Long dataReductionPackageId = null;

  @SerializedName("dataReductionPackageName")
  private String dataReductionPackageName = null;

  @SerializedName("detectionSystem")
  private String detectionSystem = null;

  @SerializedName("dwellTimes")
  private Float dwellTimes = null;

  @SerializedName("id")
  private Long id = null;

  @SerializedName("internalStandardId")
  private Long internalStandardId = null;

  @SerializedName("internalStandardName")
  private String internalStandardName = null;

  @SerializedName("laserFluence")
  private Float laserFluence = null;

  @SerializedName("laserRepetitionRate")
  private Integer laserRepetitionRate = null;

  @SerializedName("laserSamplingModeId")
  private Long laserSamplingModeId = null;

  @SerializedName("laserSamplingModeName")
  private String laserSamplingModeName = null;

  @SerializedName("laserSpotSize")
  private Integer laserSpotSize = null;

  @SerializedName("laserSystemId")
  private Long laserSystemId = null;

  @SerializedName("laserSystemName")
  private String laserSystemName = null;

  @SerializedName("laserWavelenghtId")
  private Long laserWavelenghtId = null;

  @SerializedName("laserWavelenghtName")
  private String laserWavelenghtName = null;

  @SerializedName("makeupGasFlow")
  private Float makeupGasFlow = null;

  @SerializedName("massesMeasured")
  private String massesMeasured = null;

  @SerializedName("modeMSMS")
  private Boolean modeMSMS = null;

  @SerializedName("modelICPMSId")
  private Long modelICPMSId = null;

  @SerializedName("modelICPMSName")
  private String modelICPMSName = null;

  @SerializedName("pulseWidthUnitId")
  private Long pulseWidthUnitId = null;

  @SerializedName("pulseWidthUnitName")
  private String pulseWidthUnitName = null;

  @SerializedName("pulseWidthValue")
  private Integer pulseWidthValue = null;

  @SerializedName("reactionGasMSMS")
  private String reactionGasMSMS = null;

  @SerializedName("reactionGasMSMSFlow")
  private Float reactionGasMSMSFlow = null;

  @SerializedName("sampleIntroduction")
  private String sampleIntroduction = null;

  @SerializedName("typeICPMSId")
  private Long typeICPMSId = null;

  @SerializedName("typeICPMSName")
  private String typeICPMSName = null;

  public LAICPMSDTO ablationDuration(Integer ablationDuration) {
    this.ablationDuration = ablationDuration;
    return this;
  }

   /**
   * Get ablationDuration
   * @return ablationDuration
  **/
  @ApiModelProperty(value = "")
  public Integer getAblationDuration() {
    return ablationDuration;
  }

  public void setAblationDuration(Integer ablationDuration) {
    this.ablationDuration = ablationDuration;
  }

  public LAICPMSDTO additionalGas(String additionalGas) {
    this.additionalGas = additionalGas;
    return this;
  }

   /**
   * Get additionalGas
   * @return additionalGas
  **/
  @ApiModelProperty(value = "")
  public String getAdditionalGas() {
    return additionalGas;
  }

  public void setAdditionalGas(String additionalGas) {
    this.additionalGas = additionalGas;
  }

  public LAICPMSDTO additionalGasFlow(Float additionalGasFlow) {
    this.additionalGasFlow = additionalGasFlow;
    return this;
  }

   /**
   * Get additionalGasFlow
   * @return additionalGasFlow
  **/
  @ApiModelProperty(value = "")
  public Float getAdditionalGasFlow() {
    return additionalGasFlow;
  }

  public void setAdditionalGasFlow(Float additionalGasFlow) {
    this.additionalGasFlow = additionalGasFlow;
  }

  public LAICPMSDTO analyticalSessionID(String analyticalSessionID) {
    this.analyticalSessionID = analyticalSessionID;
    return this;
  }

   /**
   * Get analyticalSessionID
   * @return analyticalSessionID
  **/
  @ApiModelProperty(value = "")
  public String getAnalyticalSessionID() {
    return analyticalSessionID;
  }

  public void setAnalyticalSessionID(String analyticalSessionID) {
    this.analyticalSessionID = analyticalSessionID;
  }

  public LAICPMSDTO blankDuration(Integer blankDuration) {
    this.blankDuration = blankDuration;
    return this;
  }

   /**
   * Get blankDuration
   * @return blankDuration
  **/
  @ApiModelProperty(value = "")
  public Integer getBlankDuration() {
    return blankDuration;
  }

  public void setBlankDuration(Integer blankDuration) {
    this.blankDuration = blankDuration;
  }

  public LAICPMSDTO calibratingReferenceMaterialId(Long calibratingReferenceMaterialId) {
    this.calibratingReferenceMaterialId = calibratingReferenceMaterialId;
    return this;
  }

   /**
   * Get calibratingReferenceMaterialId
   * @return calibratingReferenceMaterialId
  **/
  @ApiModelProperty(value = "")
  public Long getCalibratingReferenceMaterialId() {
    return calibratingReferenceMaterialId;
  }

  public void setCalibratingReferenceMaterialId(Long calibratingReferenceMaterialId) {
    this.calibratingReferenceMaterialId = calibratingReferenceMaterialId;
  }

  public LAICPMSDTO calibratingReferenceMaterialName(String calibratingReferenceMaterialName) {
    this.calibratingReferenceMaterialName = calibratingReferenceMaterialName;
    return this;
  }

   /**
   * Get calibratingReferenceMaterialName
   * @return calibratingReferenceMaterialName
  **/
  @ApiModelProperty(value = "")
  public String getCalibratingReferenceMaterialName() {
    return calibratingReferenceMaterialName;
  }

  public void setCalibratingReferenceMaterialName(String calibratingReferenceMaterialName) {
    this.calibratingReferenceMaterialName = calibratingReferenceMaterialName;
  }

  public LAICPMSDTO carrierGas(String carrierGas) {
    this.carrierGas = carrierGas;
    return this;
  }

   /**
   * Get carrierGas
   * @return carrierGas
  **/
  @ApiModelProperty(value = "")
  public String getCarrierGas() {
    return carrierGas;
  }

  public void setCarrierGas(String carrierGas) {
    this.carrierGas = carrierGas;
  }

  public LAICPMSDTO carrierGasFlow(Float carrierGasFlow) {
    this.carrierGasFlow = carrierGasFlow;
    return this;
  }

   /**
   * Get carrierGasFlow
   * @return carrierGasFlow
  **/
  @ApiModelProperty(value = "")
  public Float getCarrierGasFlow() {
    return carrierGasFlow;
  }

  public void setCarrierGasFlow(Float carrierGasFlow) {
    this.carrierGasFlow = carrierGasFlow;
  }

  public LAICPMSDTO combinedMeasurementId(Long combinedMeasurementId) {
    this.combinedMeasurementId = combinedMeasurementId;
    return this;
  }

   /**
   * Get combinedMeasurementId
   * @return combinedMeasurementId
  **/
  @ApiModelProperty(value = "")
  public Long getCombinedMeasurementId() {
    return combinedMeasurementId;
  }

  public void setCombinedMeasurementId(Long combinedMeasurementId) {
    this.combinedMeasurementId = combinedMeasurementId;
  }

  public LAICPMSDTO combinedMeasurementName(String combinedMeasurementName) {
    this.combinedMeasurementName = combinedMeasurementName;
    return this;
  }

   /**
   * Get combinedMeasurementName
   * @return combinedMeasurementName
  **/
  @ApiModelProperty(value = "")
  public String getCombinedMeasurementName() {
    return combinedMeasurementName;
  }

  public void setCombinedMeasurementName(String combinedMeasurementName) {
    this.combinedMeasurementName = combinedMeasurementName;
  }

  public LAICPMSDTO dataReductionPackageId(Long dataReductionPackageId) {
    this.dataReductionPackageId = dataReductionPackageId;
    return this;
  }

   /**
   * Get dataReductionPackageId
   * @return dataReductionPackageId
  **/
  @ApiModelProperty(value = "")
  public Long getDataReductionPackageId() {
    return dataReductionPackageId;
  }

  public void setDataReductionPackageId(Long dataReductionPackageId) {
    this.dataReductionPackageId = dataReductionPackageId;
  }

  public LAICPMSDTO dataReductionPackageName(String dataReductionPackageName) {
    this.dataReductionPackageName = dataReductionPackageName;
    return this;
  }

   /**
   * Get dataReductionPackageName
   * @return dataReductionPackageName
  **/
  @ApiModelProperty(value = "")
  public String getDataReductionPackageName() {
    return dataReductionPackageName;
  }

  public void setDataReductionPackageName(String dataReductionPackageName) {
    this.dataReductionPackageName = dataReductionPackageName;
  }

  public LAICPMSDTO detectionSystem(String detectionSystem) {
    this.detectionSystem = detectionSystem;
    return this;
  }

   /**
   * Get detectionSystem
   * @return detectionSystem
  **/
  @ApiModelProperty(value = "")
  public String getDetectionSystem() {
    return detectionSystem;
  }

  public void setDetectionSystem(String detectionSystem) {
    this.detectionSystem = detectionSystem;
  }

  public LAICPMSDTO dwellTimes(Float dwellTimes) {
    this.dwellTimes = dwellTimes;
    return this;
  }

   /**
   * Get dwellTimes
   * @return dwellTimes
  **/
  @ApiModelProperty(value = "")
  public Float getDwellTimes() {
    return dwellTimes;
  }

  public void setDwellTimes(Float dwellTimes) {
    this.dwellTimes = dwellTimes;
  }

  public LAICPMSDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public LAICPMSDTO internalStandardId(Long internalStandardId) {
    this.internalStandardId = internalStandardId;
    return this;
  }

   /**
   * Get internalStandardId
   * @return internalStandardId
  **/
  @ApiModelProperty(value = "")
  public Long getInternalStandardId() {
    return internalStandardId;
  }

  public void setInternalStandardId(Long internalStandardId) {
    this.internalStandardId = internalStandardId;
  }

  public LAICPMSDTO internalStandardName(String internalStandardName) {
    this.internalStandardName = internalStandardName;
    return this;
  }

   /**
   * Get internalStandardName
   * @return internalStandardName
  **/
  @ApiModelProperty(value = "")
  public String getInternalStandardName() {
    return internalStandardName;
  }

  public void setInternalStandardName(String internalStandardName) {
    this.internalStandardName = internalStandardName;
  }

  public LAICPMSDTO laserFluence(Float laserFluence) {
    this.laserFluence = laserFluence;
    return this;
  }

   /**
   * Get laserFluence
   * @return laserFluence
  **/
  @ApiModelProperty(value = "")
  public Float getLaserFluence() {
    return laserFluence;
  }

  public void setLaserFluence(Float laserFluence) {
    this.laserFluence = laserFluence;
  }

  public LAICPMSDTO laserRepetitionRate(Integer laserRepetitionRate) {
    this.laserRepetitionRate = laserRepetitionRate;
    return this;
  }

   /**
   * Get laserRepetitionRate
   * @return laserRepetitionRate
  **/
  @ApiModelProperty(value = "")
  public Integer getLaserRepetitionRate() {
    return laserRepetitionRate;
  }

  public void setLaserRepetitionRate(Integer laserRepetitionRate) {
    this.laserRepetitionRate = laserRepetitionRate;
  }

  public LAICPMSDTO laserSamplingModeId(Long laserSamplingModeId) {
    this.laserSamplingModeId = laserSamplingModeId;
    return this;
  }

   /**
   * Get laserSamplingModeId
   * @return laserSamplingModeId
  **/
  @ApiModelProperty(value = "")
  public Long getLaserSamplingModeId() {
    return laserSamplingModeId;
  }

  public void setLaserSamplingModeId(Long laserSamplingModeId) {
    this.laserSamplingModeId = laserSamplingModeId;
  }

  public LAICPMSDTO laserSamplingModeName(String laserSamplingModeName) {
    this.laserSamplingModeName = laserSamplingModeName;
    return this;
  }

   /**
   * Get laserSamplingModeName
   * @return laserSamplingModeName
  **/
  @ApiModelProperty(value = "")
  public String getLaserSamplingModeName() {
    return laserSamplingModeName;
  }

  public void setLaserSamplingModeName(String laserSamplingModeName) {
    this.laserSamplingModeName = laserSamplingModeName;
  }

  public LAICPMSDTO laserSpotSize(Integer laserSpotSize) {
    this.laserSpotSize = laserSpotSize;
    return this;
  }

   /**
   * Get laserSpotSize
   * @return laserSpotSize
  **/
  @ApiModelProperty(value = "")
  public Integer getLaserSpotSize() {
    return laserSpotSize;
  }

  public void setLaserSpotSize(Integer laserSpotSize) {
    this.laserSpotSize = laserSpotSize;
  }

  public LAICPMSDTO laserSystemId(Long laserSystemId) {
    this.laserSystemId = laserSystemId;
    return this;
  }

   /**
   * Get laserSystemId
   * @return laserSystemId
  **/
  @ApiModelProperty(value = "")
  public Long getLaserSystemId() {
    return laserSystemId;
  }

  public void setLaserSystemId(Long laserSystemId) {
    this.laserSystemId = laserSystemId;
  }

  public LAICPMSDTO laserSystemName(String laserSystemName) {
    this.laserSystemName = laserSystemName;
    return this;
  }

   /**
   * Get laserSystemName
   * @return laserSystemName
  **/
  @ApiModelProperty(value = "")
  public String getLaserSystemName() {
    return laserSystemName;
  }

  public void setLaserSystemName(String laserSystemName) {
    this.laserSystemName = laserSystemName;
  }

  public LAICPMSDTO laserWavelenghtId(Long laserWavelenghtId) {
    this.laserWavelenghtId = laserWavelenghtId;
    return this;
  }

   /**
   * Get laserWavelenghtId
   * @return laserWavelenghtId
  **/
  @ApiModelProperty(value = "")
  public Long getLaserWavelenghtId() {
    return laserWavelenghtId;
  }

  public void setLaserWavelenghtId(Long laserWavelenghtId) {
    this.laserWavelenghtId = laserWavelenghtId;
  }

  public LAICPMSDTO laserWavelenghtName(String laserWavelenghtName) {
    this.laserWavelenghtName = laserWavelenghtName;
    return this;
  }

   /**
   * Get laserWavelenghtName
   * @return laserWavelenghtName
  **/
  @ApiModelProperty(value = "")
  public String getLaserWavelenghtName() {
    return laserWavelenghtName;
  }

  public void setLaserWavelenghtName(String laserWavelenghtName) {
    this.laserWavelenghtName = laserWavelenghtName;
  }

  public LAICPMSDTO makeupGasFlow(Float makeupGasFlow) {
    this.makeupGasFlow = makeupGasFlow;
    return this;
  }

   /**
   * Get makeupGasFlow
   * @return makeupGasFlow
  **/
  @ApiModelProperty(value = "")
  public Float getMakeupGasFlow() {
    return makeupGasFlow;
  }

  public void setMakeupGasFlow(Float makeupGasFlow) {
    this.makeupGasFlow = makeupGasFlow;
  }

  public LAICPMSDTO massesMeasured(String massesMeasured) {
    this.massesMeasured = massesMeasured;
    return this;
  }

   /**
   * Get massesMeasured
   * @return massesMeasured
  **/
  @ApiModelProperty(value = "")
  public String getMassesMeasured() {
    return massesMeasured;
  }

  public void setMassesMeasured(String massesMeasured) {
    this.massesMeasured = massesMeasured;
  }

  public LAICPMSDTO modeMSMS(Boolean modeMSMS) {
    this.modeMSMS = modeMSMS;
    return this;
  }

   /**
   * Get modeMSMS
   * @return modeMSMS
  **/
  @ApiModelProperty(value = "")
  public Boolean isModeMSMS() {
    return modeMSMS;
  }

  public void setModeMSMS(Boolean modeMSMS) {
    this.modeMSMS = modeMSMS;
  }

  public LAICPMSDTO modelICPMSId(Long modelICPMSId) {
    this.modelICPMSId = modelICPMSId;
    return this;
  }

   /**
   * Get modelICPMSId
   * @return modelICPMSId
  **/
  @ApiModelProperty(value = "")
  public Long getModelICPMSId() {
    return modelICPMSId;
  }

  public void setModelICPMSId(Long modelICPMSId) {
    this.modelICPMSId = modelICPMSId;
  }

  public LAICPMSDTO modelICPMSName(String modelICPMSName) {
    this.modelICPMSName = modelICPMSName;
    return this;
  }

   /**
   * Get modelICPMSName
   * @return modelICPMSName
  **/
  @ApiModelProperty(value = "")
  public String getModelICPMSName() {
    return modelICPMSName;
  }

  public void setModelICPMSName(String modelICPMSName) {
    this.modelICPMSName = modelICPMSName;
  }

  public LAICPMSDTO pulseWidthUnitId(Long pulseWidthUnitId) {
    this.pulseWidthUnitId = pulseWidthUnitId;
    return this;
  }

   /**
   * Get pulseWidthUnitId
   * @return pulseWidthUnitId
  **/
  @ApiModelProperty(value = "")
  public Long getPulseWidthUnitId() {
    return pulseWidthUnitId;
  }

  public void setPulseWidthUnitId(Long pulseWidthUnitId) {
    this.pulseWidthUnitId = pulseWidthUnitId;
  }

  public LAICPMSDTO pulseWidthUnitName(String pulseWidthUnitName) {
    this.pulseWidthUnitName = pulseWidthUnitName;
    return this;
  }

   /**
   * Get pulseWidthUnitName
   * @return pulseWidthUnitName
  **/
  @ApiModelProperty(value = "")
  public String getPulseWidthUnitName() {
    return pulseWidthUnitName;
  }

  public void setPulseWidthUnitName(String pulseWidthUnitName) {
    this.pulseWidthUnitName = pulseWidthUnitName;
  }

  public LAICPMSDTO pulseWidthValue(Integer pulseWidthValue) {
    this.pulseWidthValue = pulseWidthValue;
    return this;
  }

   /**
   * Get pulseWidthValue
   * @return pulseWidthValue
  **/
  @ApiModelProperty(value = "")
  public Integer getPulseWidthValue() {
    return pulseWidthValue;
  }

  public void setPulseWidthValue(Integer pulseWidthValue) {
    this.pulseWidthValue = pulseWidthValue;
  }

  public LAICPMSDTO reactionGasMSMS(String reactionGasMSMS) {
    this.reactionGasMSMS = reactionGasMSMS;
    return this;
  }

   /**
   * Get reactionGasMSMS
   * @return reactionGasMSMS
  **/
  @ApiModelProperty(value = "")
  public String getReactionGasMSMS() {
    return reactionGasMSMS;
  }

  public void setReactionGasMSMS(String reactionGasMSMS) {
    this.reactionGasMSMS = reactionGasMSMS;
  }

  public LAICPMSDTO reactionGasMSMSFlow(Float reactionGasMSMSFlow) {
    this.reactionGasMSMSFlow = reactionGasMSMSFlow;
    return this;
  }

   /**
   * Get reactionGasMSMSFlow
   * @return reactionGasMSMSFlow
  **/
  @ApiModelProperty(value = "")
  public Float getReactionGasMSMSFlow() {
    return reactionGasMSMSFlow;
  }

  public void setReactionGasMSMSFlow(Float reactionGasMSMSFlow) {
    this.reactionGasMSMSFlow = reactionGasMSMSFlow;
  }

  public LAICPMSDTO sampleIntroduction(String sampleIntroduction) {
    this.sampleIntroduction = sampleIntroduction;
    return this;
  }

   /**
   * Get sampleIntroduction
   * @return sampleIntroduction
  **/
  @ApiModelProperty(value = "")
  public String getSampleIntroduction() {
    return sampleIntroduction;
  }

  public void setSampleIntroduction(String sampleIntroduction) {
    this.sampleIntroduction = sampleIntroduction;
  }

  public LAICPMSDTO typeICPMSId(Long typeICPMSId) {
    this.typeICPMSId = typeICPMSId;
    return this;
  }

   /**
   * Get typeICPMSId
   * @return typeICPMSId
  **/
  @ApiModelProperty(value = "")
  public Long getTypeICPMSId() {
    return typeICPMSId;
  }

  public void setTypeICPMSId(Long typeICPMSId) {
    this.typeICPMSId = typeICPMSId;
  }

  public LAICPMSDTO typeICPMSName(String typeICPMSName) {
    this.typeICPMSName = typeICPMSName;
    return this;
  }

   /**
   * Get typeICPMSName
   * @return typeICPMSName
  **/
  @ApiModelProperty(value = "")
  public String getTypeICPMSName() {
    return typeICPMSName;
  }

  public void setTypeICPMSName(String typeICPMSName) {
    this.typeICPMSName = typeICPMSName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LAICPMSDTO LAICPMSDTO = (LAICPMSDTO) o;
    return Objects.equals(this.ablationDuration, LAICPMSDTO.ablationDuration) &&
        Objects.equals(this.additionalGas, LAICPMSDTO.additionalGas) &&
        Objects.equals(this.additionalGasFlow, LAICPMSDTO.additionalGasFlow) &&
        Objects.equals(this.analyticalSessionID, LAICPMSDTO.analyticalSessionID) &&
        Objects.equals(this.blankDuration, LAICPMSDTO.blankDuration) &&
        Objects.equals(this.calibratingReferenceMaterialId, LAICPMSDTO.calibratingReferenceMaterialId) &&
        Objects.equals(this.calibratingReferenceMaterialName, LAICPMSDTO.calibratingReferenceMaterialName) &&
        Objects.equals(this.carrierGas, LAICPMSDTO.carrierGas) &&
        Objects.equals(this.carrierGasFlow, LAICPMSDTO.carrierGasFlow) &&
        Objects.equals(this.combinedMeasurementId, LAICPMSDTO.combinedMeasurementId) &&
        Objects.equals(this.combinedMeasurementName, LAICPMSDTO.combinedMeasurementName) &&
        Objects.equals(this.dataReductionPackageId, LAICPMSDTO.dataReductionPackageId) &&
        Objects.equals(this.dataReductionPackageName, LAICPMSDTO.dataReductionPackageName) &&
        Objects.equals(this.detectionSystem, LAICPMSDTO.detectionSystem) &&
        Objects.equals(this.dwellTimes, LAICPMSDTO.dwellTimes) &&
        Objects.equals(this.id, LAICPMSDTO.id) &&
        Objects.equals(this.internalStandardId, LAICPMSDTO.internalStandardId) &&
        Objects.equals(this.internalStandardName, LAICPMSDTO.internalStandardName) &&
        Objects.equals(this.laserFluence, LAICPMSDTO.laserFluence) &&
        Objects.equals(this.laserRepetitionRate, LAICPMSDTO.laserRepetitionRate) &&
        Objects.equals(this.laserSamplingModeId, LAICPMSDTO.laserSamplingModeId) &&
        Objects.equals(this.laserSamplingModeName, LAICPMSDTO.laserSamplingModeName) &&
        Objects.equals(this.laserSpotSize, LAICPMSDTO.laserSpotSize) &&
        Objects.equals(this.laserSystemId, LAICPMSDTO.laserSystemId) &&
        Objects.equals(this.laserSystemName, LAICPMSDTO.laserSystemName) &&
        Objects.equals(this.laserWavelenghtId, LAICPMSDTO.laserWavelenghtId) &&
        Objects.equals(this.laserWavelenghtName, LAICPMSDTO.laserWavelenghtName) &&
        Objects.equals(this.makeupGasFlow, LAICPMSDTO.makeupGasFlow) &&
        Objects.equals(this.massesMeasured, LAICPMSDTO.massesMeasured) &&
        Objects.equals(this.modeMSMS, LAICPMSDTO.modeMSMS) &&
        Objects.equals(this.modelICPMSId, LAICPMSDTO.modelICPMSId) &&
        Objects.equals(this.modelICPMSName, LAICPMSDTO.modelICPMSName) &&
        Objects.equals(this.pulseWidthUnitId, LAICPMSDTO.pulseWidthUnitId) &&
        Objects.equals(this.pulseWidthUnitName, LAICPMSDTO.pulseWidthUnitName) &&
        Objects.equals(this.pulseWidthValue, LAICPMSDTO.pulseWidthValue) &&
        Objects.equals(this.reactionGasMSMS, LAICPMSDTO.reactionGasMSMS) &&
        Objects.equals(this.reactionGasMSMSFlow, LAICPMSDTO.reactionGasMSMSFlow) &&
        Objects.equals(this.sampleIntroduction, LAICPMSDTO.sampleIntroduction) &&
        Objects.equals(this.typeICPMSId, LAICPMSDTO.typeICPMSId) &&
        Objects.equals(this.typeICPMSName, LAICPMSDTO.typeICPMSName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ablationDuration, additionalGas, additionalGasFlow, analyticalSessionID, blankDuration, calibratingReferenceMaterialId, calibratingReferenceMaterialName, carrierGas, carrierGasFlow, combinedMeasurementId, combinedMeasurementName, dataReductionPackageId, dataReductionPackageName, detectionSystem, dwellTimes, id, internalStandardId, internalStandardName, laserFluence, laserRepetitionRate, laserSamplingModeId, laserSamplingModeName, laserSpotSize, laserSystemId, laserSystemName, laserWavelenghtId, laserWavelenghtName, makeupGasFlow, massesMeasured, modeMSMS, modelICPMSId, modelICPMSName, pulseWidthUnitId, pulseWidthUnitName, pulseWidthValue, reactionGasMSMS, reactionGasMSMSFlow, sampleIntroduction, typeICPMSId, typeICPMSName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LAICPMSDTO {\n");
    
    sb.append("    ablationDuration: ").append(toIndentedString(ablationDuration)).append("\n");
    sb.append("    additionalGas: ").append(toIndentedString(additionalGas)).append("\n");
    sb.append("    additionalGasFlow: ").append(toIndentedString(additionalGasFlow)).append("\n");
    sb.append("    analyticalSessionID: ").append(toIndentedString(analyticalSessionID)).append("\n");
    sb.append("    blankDuration: ").append(toIndentedString(blankDuration)).append("\n");
    sb.append("    calibratingReferenceMaterialId: ").append(toIndentedString(calibratingReferenceMaterialId)).append("\n");
    sb.append("    calibratingReferenceMaterialName: ").append(toIndentedString(calibratingReferenceMaterialName)).append("\n");
    sb.append("    carrierGas: ").append(toIndentedString(carrierGas)).append("\n");
    sb.append("    carrierGasFlow: ").append(toIndentedString(carrierGasFlow)).append("\n");
    sb.append("    combinedMeasurementId: ").append(toIndentedString(combinedMeasurementId)).append("\n");
    sb.append("    combinedMeasurementName: ").append(toIndentedString(combinedMeasurementName)).append("\n");
    sb.append("    dataReductionPackageId: ").append(toIndentedString(dataReductionPackageId)).append("\n");
    sb.append("    dataReductionPackageName: ").append(toIndentedString(dataReductionPackageName)).append("\n");
    sb.append("    detectionSystem: ").append(toIndentedString(detectionSystem)).append("\n");
    sb.append("    dwellTimes: ").append(toIndentedString(dwellTimes)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    internalStandardId: ").append(toIndentedString(internalStandardId)).append("\n");
    sb.append("    internalStandardName: ").append(toIndentedString(internalStandardName)).append("\n");
    sb.append("    laserFluence: ").append(toIndentedString(laserFluence)).append("\n");
    sb.append("    laserRepetitionRate: ").append(toIndentedString(laserRepetitionRate)).append("\n");
    sb.append("    laserSamplingModeId: ").append(toIndentedString(laserSamplingModeId)).append("\n");
    sb.append("    laserSamplingModeName: ").append(toIndentedString(laserSamplingModeName)).append("\n");
    sb.append("    laserSpotSize: ").append(toIndentedString(laserSpotSize)).append("\n");
    sb.append("    laserSystemId: ").append(toIndentedString(laserSystemId)).append("\n");
    sb.append("    laserSystemName: ").append(toIndentedString(laserSystemName)).append("\n");
    sb.append("    laserWavelenghtId: ").append(toIndentedString(laserWavelenghtId)).append("\n");
    sb.append("    laserWavelenghtName: ").append(toIndentedString(laserWavelenghtName)).append("\n");
    sb.append("    makeupGasFlow: ").append(toIndentedString(makeupGasFlow)).append("\n");
    sb.append("    massesMeasured: ").append(toIndentedString(massesMeasured)).append("\n");
    sb.append("    modeMSMS: ").append(toIndentedString(modeMSMS)).append("\n");
    sb.append("    modelICPMSId: ").append(toIndentedString(modelICPMSId)).append("\n");
    sb.append("    modelICPMSName: ").append(toIndentedString(modelICPMSName)).append("\n");
    sb.append("    pulseWidthUnitId: ").append(toIndentedString(pulseWidthUnitId)).append("\n");
    sb.append("    pulseWidthUnitName: ").append(toIndentedString(pulseWidthUnitName)).append("\n");
    sb.append("    pulseWidthValue: ").append(toIndentedString(pulseWidthValue)).append("\n");
    sb.append("    reactionGasMSMS: ").append(toIndentedString(reactionGasMSMS)).append("\n");
    sb.append("    reactionGasMSMSFlow: ").append(toIndentedString(reactionGasMSMSFlow)).append("\n");
    sb.append("    sampleIntroduction: ").append(toIndentedString(sampleIntroduction)).append("\n");
    sb.append("    typeICPMSId: ").append(toIndentedString(typeICPMSId)).append("\n");
    sb.append("    typeICPMSName: ").append(toIndentedString(typeICPMSName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

